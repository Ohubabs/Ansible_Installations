#After creating Sonar/Ansible User with SSH keys and updating default/custom hosts file
#Nexus must be installed on a redhat server with min 4GB and thus, uses the yum package manager.
---
- hosts: nexus
  become: true
  tasks:
  - name: Install list of packages
    yum: 
      name: '{{item}}' 
      state: present
    with_items:
      - unzip
      
  - name: Make opt directory in Nexus User #If different user, edit accordingly.
    shell:
      cmd: mkdir opt 
  
  - name: Change into opt directory in Nexus User #If different user, edit accordingly.
    shell:
      cmd: cd opt
      
  - name: Change ownership for opt directory in Sonar User. 
    file:
      path: /home/nexus/opt/
      owner: nexus
      group: nexus
      mode: "u+rwx,g+rx,o=rx"
      recurse: yes
      
  - name: install OpenJDK 11 in opt directory of Nexus User
    yum:
      name: java-1.8.0-openjdk-devel
      state: present

  - name: Download and Unzip Nexus into the opt directory of Nexus User
    unarchive:
      src: https://download.sonatype.com/nexus/3/nexus-3.51.0-01-unix.tar.gz
      dest: /home/nexus/opt/ #Remember to end path with "/" so it will be a directory i.e. /home/nexus/opt/ vs /home/nexus/opt
      remote_src: yes

  - name: Change ownership for Nexus download in opt directory of Nexus User.
    file:
      path: /home/nexus/opt/nexus-3.51.0-01
      owner: nexus
      group: nexus
      mode: "u+rwx,g+rx,o=rx"
      recurse: yes
      
  - name: Change ownership for Nexus download in opt directory of Nexus User.
    file:
      path: /home/nexus/opt/sonatype-work
      owner: nexus
      group: nexus
      mode: "u+rwx,g+rx,o=rx"
      recurse: yes
      
  - name: Change/uncomment "#run_as_user="" to [ run_as_user="nexus" ] in /home/nexus/opt/nexus-3.51.0-01/bin/nexus.rc file
    shell: echo  'run_as_user="nexus" ' > /home/nexus/opt/nexus-3.51.0-01/bin/nexus.rc
  
  - name: Make nexus into a service
    command: sudo ln -s /home/nexus/opt/nexus-3.51.0-01/bin/nexus /etc/systemd/nexus
    
  - name: enable nexus service
    systemd: 
       name:nexus 
       enabled: yes
  
  - name: start nexus service
    systemd: 
      name: nexus 
      state: started
       
  #- name: Start nexus
    command: /home/nexus/opt/nexus-3.51.0-01/bin/nexus start

  #- name: Nexus status
    command: /home/nexus/opt/nexus-3.51.0-01/bin/nexus status 

---

  

# systemd ref: https://docs.ansible.com/ansible/2.7/modules/systemd_module.html
    
  


  #- name: Configure Nexus initial admin user
    #uri:
      #url: "http://localhost:8081/service/rest/beta/security/users/admin/change-password"
      #method: PUT
      #body_format: json
      #body: '{ "password": Arsenal04 }'
      #headers:
        #Content-Type: "application/json"
      #status_code: 415
      #user: princebabs
      #password: Arsenal04 


#If using variable, here is an example, for installing sonarqube and Nexus. Slightly different strategy, suggested by classmate so adjust as needed.
   ---
- name: Install and configure SonarQube and Nexus
  hosts: your_server
  become: true

  vars:
    sonarqube_version: 9.2.1
    sonarqube_jdbc_url: "jdbc:postgresql://localhost/sonarqube"
    sonarqube_jdbc_user: "sonarqube"
    sonarqube_jdbc_password: "sonarqube_password"
    nexus_version: 3.35.0
    nexus_user: "admin"
    nexus_password: "admin_password"

  tasks:
    - name: Install PostgreSQL
      yum:
        name: postgresql-server
        state: present

    - name: Start and enable PostgreSQL service
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Install Java 11
      yum:
        name: java-1.8.0-openjdk-devel
        state: present

    - name: Install SonarQube
      get_url:
        url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
        dest: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
      become: true
      mode: '0644'
    - name: Extract SonarQube
      unarchive:
        src: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
        dest: "/opt/"
        copy: no
        owner: root
        group: root

    - name: Configure SonarQube JDBC
      lineinfile:
        path: "/opt/sonarqube-{{ sonarqube_version }}/conf/sonar.properties"
        regexp: "^sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube$"
        line: "sonar.jdbc.url={{ sonarqube_jdbc_url }}"
        state: present
      notify: restart sonarqube

    - name: Create SonarQube database user
      become_user: postgres
      postgresql_user:
        db: sonarqube
        name: "{{ sonarqube_jdbc_user }}"
        password: "{{ sonarqube_jdbc_password }}"
        priv: "sonarqube.*:ALL"

    - name: Install Nexus
      get_url:
        url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
      become: true
      mode: '0644'
    - name: Extract Nexus
      unarchive:
        src: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "/opt/"
        copy: no
        owner: root
        group: root

    - name: Start Nexus service
      command: "/opt/nexus-{{ nexus_version }}/bin/nexus start"

    - name: Configure Nexus initial admin user
      uri:
        url: "http://localhost:8081/service/rest/beta/security/users/admin/change-password"
        method: PUT
        body_format: json
        body: '{ "password": "{{ nexus_password }}" }'
        headers:
          Content-Type: "application/json"
        status_code: 204
        user: "{{ nexus_user }}"
        password: "{{ nexus_password }}"

  handlers:
    - name: restart sonarqube
      systemd
      
      #
      
